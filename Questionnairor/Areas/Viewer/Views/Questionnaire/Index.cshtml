@model Questionnaire

@{
    ViewData["Title"] = Model.Title;
}

<div class="header">
    <h2>@Model.Title</h2>
</div>
@using (Html.BeginForm("Submit", "Questionnaire", FormMethod.Post, new { @class = "center" }))
{
    <p><strong>@Model.Introduction</strong></p>
    @if (Model != null && Model.Id != Guid.Empty)
    {
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.Title)
        @Html.HiddenFor(m => m.Introduction)
        @for (var i = 0; i < Model.Questions.Count; i++)
        {
            QuestionWithIndex data = new QuestionWithIndex(i, Model.Questions.ElementAt(i));
            await Html.RenderPartialAsync("QuestionPartialView", data);
        }
        @if (Model.Questions.Count == 0)
        {
            @Html.Hidden("Questions", Model.Questions)
        }
        @Html.HiddenFor(m => m.Conclusion)
    }
    <br />
    <div id="submitMessage">
        @Html.ValidationMessageFor(m => m.Questions)
    </div>
    <hr />
    <input type="submit" id="submitButton" disabled="true" value="Submit Questionnaire" />
    <script type="text/javascript">
        function answers() {
            var questionList = document.getElementsByClassName("Question");
            var answerList = document.getElementsByClassName("Answer");
            var count = 0;
            for (var i = 0; i < answerList.length; i++) {
                if (answerList[i].checked) count++;
            }
            if (count < questionList.length) {
                document.getElementById("submitButton").disabled = true;
            }
            else {
                document.getElementById("submitButton").disabled = false;
                document.getElementById("submitMessage").style = "display:none;";
            }
        }
        answers();
    </script>
    <environment include="Development">
        @Html.Hidden("DebugJson", Model.ToJson(Newtonsoft.Json.Formatting.Indented))
    </environment>
}
