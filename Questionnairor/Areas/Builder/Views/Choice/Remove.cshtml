@model Questionnairor.Models.Choice

@{
    ViewData["Title"] = "Edit";
    ViewData["ChoiceValue"] = Model.Value;
}

<h2>Choice</h2>
<h4>Delete</h4>
<hr />
@using (Html.BeginForm("Delete", "Choice", new { questionnaireId = ViewData["Id"], questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"], confirm = true }, FormMethod.Post))
{
    @Html.ValidationSummary(false)
    <div class="Editor Left">
        @Html.LabelFor(m => m.Value)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.Value, new { @readonly = "readonly" })
    </div>
    <div class="Editor Left">
        @Html.LabelFor(m => m.Text)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.Text, new { @readonly = "readonly" })
    </div>
    <div class="Editor Left">
        @Html.LabelFor(m => m.IsDefault)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.IsDefault, new { @readonly = "readonly" })
    </div>
    <p>
        Please confirm permanent deletion of this choice.
    </p>
    <div>
        <input type="submit" value="Delete Choice" />
        <a href="@Url.Action("Edit", "Choice", new { questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"] })"><input type="button" value="Cancel Deletion" /></a>
    </div>
    <hr />
    <h4>Responses</h4>
    foreach (var response in Model.Responses)
    {
        @await Html.PartialAsync("ResponsePartialView", response)
    }
    @Html.HiddenFor(m => m.Responses)
    <br />
    <div>
        <a href="@Url.Action("Add", "Response", new { questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"] })"><input type="button" value="Add New Response" /></a>
    </div>
}
<hr />
<div>
    @Html.ActionLink("Back to Questionnaire", "Edit", "Questionnaire")
    @Html.ActionLink("Back to Question", "Edit", "Question", new { questionnaireId = ViewData["Id"], questionId = ViewData["QuestionId"] })
</div>

