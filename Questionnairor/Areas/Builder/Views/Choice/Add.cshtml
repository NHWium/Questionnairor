@model Questionnairor.Models.Choice

@{
    ViewData["Title"] = "Add";
    ViewData["ChoiceValue"] = Model.Value;
}

<h2>Choice</h2>
<h4>Add</h4>
<hr />
@using (Html.BeginForm("Create", "Choice", new { questionId = ViewData["QuestionId"] }, FormMethod.Post))
{
    <div class="Editor Left">
        @Html.LabelFor(m => m.Value)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.Value)
        @Html.ValidationMessageFor(m => m.Value)
    </div>
    <div class="Editor Left">
        @Html.LabelFor(m => m.Text)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.Text)
        @Html.ValidationMessageFor(m => m.Text)
    </div>
    <div class="Editor Left">
        @Html.LabelFor(m => m.IsDefault)
        @Html.EditorFor(m => m.IsDefault)
        @Html.ValidationMessageFor(m => m.IsDefault)
    </div>
    @Html.HiddenFor(m => m.Responses)
    <p>
        Add a choice to the selected question. Values must be unique, and only one can be the default.
    </p>
    <div>
        <input type="submit" value="Add Choice" />
        <a href="@Url.Action("Edit", "Question", new { questionId = ViewData["QuestionId"] })"><input type="button" value="Cancel Add" /></a>
    </div>
}
<hr />
<environment include="Development">
    @Html.Hidden("DebugJson", Model.ToJson(Newtonsoft.Json.Formatting.Indented))
</environment>
@await Html.PartialAsync("FooterPartialView", new FooterModel(ViewData["QuestionId"], null))

