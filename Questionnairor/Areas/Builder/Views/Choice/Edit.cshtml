@model Questionnairor.Models.Choice

@{
    ViewData["Title"] = "Edit";
}

<h2>Choice</h2>
<h4>Edit</h4>
<hr />
@using (Html.BeginForm("Update", "Choice", new { questionnaireId = ViewData["Id"], questionId = ViewData["QuestionId"], oldValue = ViewData["ChoiceValue"] }, FormMethod.Post))
{
    @Html.ValidationSummary(false)
    <div class="Editor Left">
        @Html.LabelFor(m => m.Value)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.Value)
        @Html.ValidationMessageFor(m => m.Value)
    </div>
    <div class="Editor Left">
        @Html.LabelFor(m => m.Text)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.Text)
        @Html.ValidationMessageFor(m => m.Text)
    </div>
    <div class="Editor Left">
        @Html.LabelFor(m => m.IsDefault)
        @Html.EditorFor(m => m.IsDefault)
    </div>
    <br />
    <div>
        <input type="submit" value="Edit Choice" />
    </div>
    <hr />
    <h4>Responses</h4>
    foreach (var response in Model.Responses)
    {
        @await Html.PartialAsync("ResponsePartialView", response)
    }
    @if (Model.Responses.Count == 0)
    {
        @Html.HiddenFor(m => m.Responses)
    }
    <br />
    <div>
        <input type="submit" value="Add Response" formaction="@Url.Action("Add", "Response", new { questionnaireId = ViewData["Id"], questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"] })" />
        @Html.DropDownListFor(m => m.Responses, new SelectList(Model.Responses, "Id", "Feedback"))
    </div>
}
<hr />
<div>
    @Html.ActionLink("Back to List", "Edit", "Question", new { questionnaireId = ViewData["Id"], questionId = ViewData["QuestionId"] })
</div>

