@model Questionnairor.Models.Response

@{
    ViewData["Title"] = "Delete";
}

<h2>Response</h2>
<h4>Delete</h4>
<hr />
@using (Html.BeginForm("Delete", "Response", new { questionnaireId = ViewData["Id"], questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"], responseId = Model.Id }, FormMethod.Post))
{
    @Html.HiddenFor(m => m.Id)
    <div class="Editor Left">
        @Html.LabelFor(m => m.Title)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.Title)
    </div>
    <div class="Editor Left">
        @Html.LabelFor(m => m.Feedback)
    </div>
    <div class="Editor Right">
        @Html.TextAreaFor(m => m.Feedback, new { @readonly = "readonly" })
    </div>
    <div class="Editor Left">
        @Html.LabelFor(m => m.MinimumChoices)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.MinimumChoices, new { @readonly = "readonly" })
    </div>
    <p>
        Please confirm permanent deletion of this response.
    </p>
    <div>
        <input type="submit" value="Delete Response" />
        <a href="@Url.Action("Edit", "Response", new { questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"], responseId = Model.Id })"><input type="button" value="Cancel Deletion" /></a>
    </div>
}
<hr />
<environment include="Development">
    @Html.Hidden("DebugJson", Model.ToJson(Newtonsoft.Json.Formatting.Indented))
</environment>
@await Html.PartialAsync("FooterPartialView", new FooterModel(ViewData["QuestionId"], ViewData["ChoiceValue"]))

