@model Questionnairor.Models.Response

@{
    ViewData["Title"] = "Add";
}

<h2>Response</h2>
<h4>Add</h4>
<hr />
@using (Html.BeginForm("Create", "Response", new { questionnaireId = ViewData["Id"], questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"] }, FormMethod.Post))
{
    @Html.HiddenFor(m => m.Id)
    <div class="Editor Left">
        @Html.LabelFor(m => m.Title)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.Title)
        @Html.ValidationMessageFor(m => m.Title)
    </div>
    <div class="Editor Left">
        @Html.LabelFor(m => m.Feedback)
    </div>
    <div class="Editor Right">
        @Html.TextAreaFor(m => m.Feedback)
        @Html.ValidationMessageFor(m => m.Feedback)
    </div>
    <div class="Editor Left">
        @Html.LabelFor(m => m.MinimumChoices)
    </div>
    <div class="Editor Right">
        @Html.EditorFor(m => m.MinimumChoices)
        @Html.ValidationMessageFor(m => m.MinimumChoices)
    </div>
    <br />
    <div>
        <input type="submit" value="Add Response" />
        <a href="@Url.Action("Edit", "Choice", new { questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"] })"><input type="button" value="Cancel Add" /></a>
    </div>
}
<hr />
<environment include="Development">
    @Html.Hidden("DebugJson", Model.ToJson(Newtonsoft.Json.Formatting.Indented))
</environment>
<div>
    @Html.ActionLink("Back to Questionnaire", "Edit", "Questionnaire")
    @Html.ActionLink("Back to Question", "Edit", "Question", new { questionId = ViewData["QuestionId"] })
    @Html.ActionLink("Back to Choice", "Edit", "Choice", new { questionnaireId = ViewData["Id"], questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"] })
</div>

