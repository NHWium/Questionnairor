@model Questionnairor.Models.Response

@{
    ViewData["Title"] = "Add";
}

<div class="header">
    <h2>Response</h2>
    <h4>Add</h4>
    <hr />
</div>
@using (Html.BeginForm("Create", "Response", new { questionnaireId = ViewData["Id"], questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"] }, FormMethod.Post, true, new { @class = "center" }))
{
    @Html.HiddenFor(m => m.Id)
    <div class="editor left">
        @Html.LabelFor(m => m.Title)
    </div>
    <div class="editor right">
        @Html.EditorFor(m => m.Title)
        @Html.ValidationMessageFor(m => m.Title)
    </div>
    <div class="editor left">
        @Html.LabelFor(m => m.Feedback)
    </div>
    <div class="editor right">
        @Html.TextAreaFor(m => m.Feedback)
        @Html.ValidationMessageFor(m => m.Feedback)
    </div>
    <div class="editor left">
        @Html.LabelFor(m => m.MinimumChoices)
    </div>
    <div class="editor right">
        @Html.EditorFor(m => m.MinimumChoices)
        @Html.ValidationMessageFor(m => m.MinimumChoices)
    </div>
    <br />
    <div>
        <input type="submit" value="Add Response" />
        <a href="@Url.Action("Edit", "Choice", new { questionId = ViewData["QuestionId"], value = ViewData["ChoiceValue"] })"><input type="button" value="Cancel Add" /></a>
    </div>
}
<environment include="Development">
    @Html.Hidden("DebugJson", Model.ToJson(Newtonsoft.Json.Formatting.Indented))
</environment>
@await Html.PartialAsync("FooterPartialView", new FooterModel(ViewData["QuestionId"], ViewData["ChoiceValue"]))

